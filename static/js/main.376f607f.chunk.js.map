{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.376f607f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n\r\n\r\n    const Button = ({ color, text, onClick}) => {\r\n\r\n\r\n    return  (\r\n    <button \r\n        onClick={onClick} \r\n        style={{backgroundColor:color}} \r\n        className=\"btn\"\r\n        >\r\n        {text}\r\n    </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps={\r\n    color : \"steelblue\"\r\n}\r\n\r\nButton.propTypes= {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick:PropTypes.func,\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'; //impt\r\nimport Button from './Button'\r\n\r\n\r\n//rafce\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n   \r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    title : \"Task tracker\",\r\n}\r\n\r\nHeader.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n}\r\n\r\n//CSS in JS\r\n// const headingStyle = {\r\n//     color: \"red\", \r\n//     backgroundColor:\"black\"\r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes \r\n            style={{color : 'red', cursor:'pointer'}} \r\n            onClick={()=>onDelete(task.id )}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n            <Task key={task.id} \r\n            task={task} \r\n            onDelete={onDelete}\r\n            onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\n\r\nconst AddTask = ({ onAdd}) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n\r\n\r\n    const onSubmit = (e) =>\r\n    {\r\n        e.preventDefault()\r\n\r\n        if(!text)\r\n        {\r\n            alert(\"Please add a task\")\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder=\"Add Day & Time\" value={day} onChange={(e) => setDay(e.target.value)}></input>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" value={reminder} checked={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\r\n            </div>\r\n            <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\"></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n//https://www.youtube.com/watch?v=w7ejDZ8SWv8\n//sourceytlink\n//rafce\nconst App = () =>\n{\n\n  const [showAddTask,setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  useEffect(()=>{})\n\n//Add Task\nconst addTask = (task) =>\n{\n    const id = Math.floor(Math.random() * 10000) + 1\n    \n    const newTask   = { id,  ...task }\n    setTasks([...tasks, newTask])\n}\n\n//Delete task\nconst deleteTask = (id) =>\n{\n  setTasks(tasks.filter((task)=> task.id !== id))\n}\n\n// Toggle Remainder\nconst toggleReminder = (id) =>\n{\n  setTasks(tasks.map((task)=> task.id === id \n  ? { ...task,reminder: !task.reminder} : task))\n}\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={ ()=> setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd= {addTask}/>}\n      {tasks.length > 0 ? (<Tasks  tasks={tasks} onDelete={deleteTask} \n      onToggle={toggleReminder}/>) : (\"No tasks to Show\")}\n    </div>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}